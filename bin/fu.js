#!/usr/bin/env node
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n(require("path"),require("fs"),require("commander"),require("chalk"),require("inquirer"),require("handlebars"),require("download-git-repo"),require("ora"),require("child_process"),require("axios"),require("semver"),require("log-symbols")):"function"==typeof define&&define.amd?define(["path","fs","commander","chalk","inquirer","handlebars","download-git-repo","ora","child_process","axios","semver","log-symbols"],n):(e="undefined"!=typeof globalThis?globalThis:e||self).fu=n(e.path,e.fs,e.commander,e.chalk,e.inquirer,e.handlebars,e.downloadGitRepo,e.ora,e.child_process,e.axios,e.semver,e.logSymbols)}(this,(function(e,n,o,r,t,s,i,a,l,d,u,c){"use strict";function f(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var p=f(e),m=f(n),g=f(o),h=f(r),v=f(t),y=f(s),w=f(i),b=f(a),q=f(l),j=f(d),k=f(u),x=f(c);var _=[{name:"vue-pc-admin",description:"vue-pc-admin (基于 vue 开箱即用的中台前端方案)",gitUrl:"https://github.com/Fuphoenixes/vue-pc-admin.git"},{name:"vue-h5-template",description:"vue-h5-template (基于 vue 开箱即用的移动端H5解决方案)",gitUrl:"https://github.com/Fuphoenixes/vue-h5-template.git"}];var S=e=>[{name:"template",type:"list",choices:_.map((e=>({name:e.description,value:e}))),message:"请选择项目模板"},{name:"name",type:"string",message:"请输入项目名称",default:e||"project"},{name:"version",type:"string",message:"请设置版本号",default:"0.0.1"},{name:"description",type:"string",message:"请输入项目描述",default:"description"},{name:"author",type:"string",message:"请输入项目作者",default:"author"},{name:"isEslint",type:"confirm",message:"是否开启eslint"}],F="@sanp/fu-cli",B="1.1.2",G="自定义脚手架",I={clean:"rimraf ./bin && mkdir bin",build:"npm run clean && rollup --config"},P=["fu-cli","fu","cli"],T="zhaotian",U={fu:"./bin/fu.js"},z={axios:"^0.20.0",chalk:"^4.1.0",child_process:"^1.0.2",commander:"^6.1.0","download-git-repo":"^3.0.2",handlebars:"^4.7.6",inquirer:"^7.3.3","log-symbols":"^4.0.0",ora:"^5.1.0",semver:"^7.3.2"},C={"@rollup/plugin-json":"^4.1.0",rollup:"^2.28.2","rollup-plugin-commonjs":"^10.1.0","rollup-plugin-terser":"^7.0.2"},D={node:">=8.0.0"},E={name:F,version:B,description:G,scripts:I,keywords:P,author:T,license:"ISC",bin:U,private:!1,dependencies:z,devDependencies:C,engines:D};var V,$=(V=Object.freeze({__proto__:null,name:F,version:B,description:G,scripts:I,keywords:P,author:T,license:"ISC",bin:U,dependencies:z,devDependencies:C,engines:D,default:E}))&&V.default||V;const H=q.default.spawn;var O={downloadFromGit:(e,n,o)=>new Promise(((r,t)=>{const s=b.default(e+"模板下载中^.^ 请稍后");s.start(),w.default("direct:"+n,o,{clone:!0},(n=>{n?(t(n),s.fail(),console.log(x.default.error,h.default.red(`error! ${e}模板拉取失败`))):(s.succeed(),r())}))})),runInstall:(e,n="npm",o=["install"])=>new Promise(((r,t)=>{console.log(h.default.greenBright("正在安装项目依赖……\n"));const s=H(n,o,{cwd:e||process.cwd(),stdio:"inherit",shell:!0});s.on("exit",(()=>{console.log(x.default.success,h.default.greenBright("依赖安装完成!")),r()})),s.on("error",(e=>{console.log(x.default.error,h.default.red("依赖安装失败")),t(e)}))})),checkVersion:async()=>{if(!k.default.satisfies(process.version,$.engines.node))return console.log(x.default.error,h.default.red(" 你的node版本必须 >="+$.engines.node+".x 才能使用ds-cli")),Promise.reject("node版本过低");try{const e=await j.default({url:"https://registry.npmjs.org/@sanp/fu-cli",method:"GET"});if(200===e.status){const n=e.data["dist-tags"].latest,o=$.version;k.default.lt(o,n)&&(console.log(x.default.info,h.default.yellow("报告!有一个新的fu-cli版本, 请及时更新")),console.log(x.default.success,"现在最新的是:"+h.default.green(n)),console.log(x.default.warning,"你下载的是:"+h.default.red(o)))}else console.log(x.default.warning,"比对线上仓库失败")}catch(e){console.log(x.default.warning,"比对线上仓库失败")}}};const{program:R}=g.default,{downloadFromGit:A,runInstall:J,checkVersion:K}=O;R.version($.version).command("init [name]").description("初始化模板").action((async e=>{await K();let n=process.cwd();if(e&&(n=p.default.resolve(process.cwd(),e),m.default.existsSync(n)))return void console.log(h.default.red(`当前目录已存在文件名${e}， 请重新输入!`));const o=await v.default.prompt(S(e));await A(o.template.name,o.template.gitUrl,n);const r=p.default.join(n,"__package.json"),t=p.default.join(n,"package.json");if(!m.default.existsSync(r))return void console.log(h.default.red("error! 模板有误, 未找到__package.json文件"));const s=m.default.readFileSync(r).toString(),i=y.default.compile(s)(o);m.default.writeFileSync(t,i),m.default.unlinkSync(r),console.log(h.default.green("success！ 项目初始化成功")+"\n"),await J(n),console.log(h.default.greenBright("开启项目")+"\n"+h.default.greenBright("npm run dev"))})),R.parse(process.argv);return{}}));
